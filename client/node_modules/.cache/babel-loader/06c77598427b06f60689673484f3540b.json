{"ast":null,"code":"var _jsxFileName = \"/home/khaggs/Documents/GITLAB Project/employee_mgmt_system/client/src/container/ResetPassword/index.jsx\";\nimport React from 'react';\nimport '../../assets/styles/resetpassword.scss';\nimport Button from '../../components/Button/index';\nimport Input from '../../components/Input/index';\nimport Error from '../../components/Error/index';\nimport ValidateField from './ValidateField';\nimport { FaAngleDoubleRight } from 'react-icons/fa';\nimport request from 'request';\nimport { Link } from 'react-router-dom';\n\nclass ResetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        password: '',\n        confirmPassword: ''\n      },\n      errors: {\n        isValidPassword: false\n      },\n      isResetSuccessful: false,\n      isTokenVerified: false,\n      token: props.match.params.token,\n      email: props.match.params.email\n    };\n  }\n\n  componentDidMount() {\n    console.log('hello');\n    let tokenObj = {\n      token: this.state.token,\n      email: this.state.email\n    };\n    console.log(tokenObj);\n    request({\n      url: \"http://localhost:4000/resetpassword/verifytoken\",\n      method: \"POST\",\n      json: true,\n      body: tokenObj\n    }, (error, response) => {\n      let errors = {};\n      console.log(response);\n\n      if (response.statusCode === 400) {\n        console.log(response);\n        errors[\"email\"] = \"\".concat(response.body.message.error);\n        console.log(response.body.message.error);\n        this.setState({\n          errors\n        });\n      } else if (response.body.message.success) {\n        this.setState({\n          isTokenVerified: true\n        });\n      }\n    });\n  }\n\n  handleUserInput(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    let fields = this.state.fields;\n    fields[name] = value;\n    let newState = JSON.parse(JSON.stringify(this.state.errors));\n    newState.email = undefined;\n    this.setState({\n      errors: newState\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const error = ValidateField(this.state.fields);\n    console.log(error);\n    this.setState({\n      errors: error\n    });\n\n    if (error[\"isValidPassword\"]) {\n      this.setState({\n        isResetSuccessful: true\n      });\n      const obj = {\n        password: this.state.fields[\"password\"],\n        email: this.state.email\n      };\n      request({\n        url: \"http://localhost:4000/resetpassword/updatepassword\",\n        method: \"POST\",\n        json: true,\n        body: obj\n      }, (error, response) => {\n        let errors = {};\n        console.log(response);\n\n        if (response.statusCode === 400) {\n          console.log(response);\n          errors[\"email\"] = \"\".concat(response.body.message.error);\n          console.log(response.body.message.error);\n          this.setState({\n            errors\n          });\n        } else if (response.body.message.success) {\n          console.log(\"Password Updated\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.isTokenVerified && React.createElement(\"form\", {\n      className: \"demo-form\",\n      noValidate: true,\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(\"div\", {\n      className: \"form-descp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Enter Your New Password\"))), React.createElement(\"div\", {\n      className: \"input-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: 'Password',\n      name: 'password',\n      type: 'password',\n      value: this.state.password,\n      onChange: e => this.handleUserInput(e),\n      toggleCondition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: 'Confirm Password',\n      name: 'confirmPassword',\n      type: 'password',\n      value: this.state.password,\n      onChange: e => this.handleUserInput(e),\n      toggleCondition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"fade-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.errors.password && React.createElement(Error, {\n      errorMessage: this.state.errors.password,\n      className: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttonwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonName: \"RESET\",\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))), this.state.isResetSuccessful && React.createElement(\"div\", {\n      className: \"demo-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"successful \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Reset Successful! Go to login page and Enjoy\")), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"d-flex justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Go To Your Email\", React.createElement(FaAngleDoubleRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/khaggs/Documents/GITLAB Project/employee_mgmt_system/client/src/container/ResetPassword/index.jsx"],"names":["React","Button","Input","Error","ValidateField","FaAngleDoubleRight","request","Link","ResetPassword","Component","constructor","props","state","fields","password","confirmPassword","errors","isValidPassword","isResetSuccessful","isTokenVerified","token","match","params","email","componentDidMount","console","log","tokenObj","url","method","json","body","error","response","statusCode","message","setState","success","handleUserInput","e","name","target","value","newState","JSON","parse","stringify","undefined","handleSubmit","preventDefault","obj","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../../assets/styles/resetpassword.scss'\nimport Button from '../../components/Button/index'\nimport Input from '../../components/Input/index'\nimport Error from '../../components/Error/index'\nimport ValidateField from './ValidateField'\nimport { FaAngleDoubleRight } from 'react-icons/fa';\nimport request from 'request';\nimport { Link } from 'react-router-dom'\nclass ResetPassword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {\n                password:'',\n                confirmPassword:''\n                \n                \n            },\n            errors: {\n                isValidPassword:false,\n            },\n            isResetSuccessful:false,\n            isTokenVerified:false,\n            token:props.match.params.token,\n            email:props.match.params.email\n        }\n    }\n    componentDidMount(){\n        console.log('hello');\n        let tokenObj={\n            token:this.state.token,\n            email:this.state.email\n        }\n        console.log(tokenObj)\n        request({\n            url: \"http://localhost:4000/resetpassword/verifytoken\",\n            method: \"POST\",\n            json: true,\n            body: tokenObj\n        },(error, response) => {\n            let errors ={}\n            console.log(response);\n            \n            if(response.statusCode===400)\n                  {\n                      console.log(response);\n                      \n                    errors[\"email\"]=`${response.body.message.error}`;\n                    console.log(response.body.message.error);\n                    \n                    this.setState({errors})\n                  }else if(response.body.message.success){\n                     this.setState({isTokenVerified:true}) \n                  }\n                     \n                  \n            })\n    }\n    handleUserInput(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n        let fields = this.state.fields;\n        fields[name] = value;\n        let newState = JSON.parse(JSON.stringify(this.state.errors))\n        newState.email = undefined\n        this.setState({\n            errors: newState\n        })\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const error = ValidateField(this.state.fields)\n        console.log(error)\n        this.setState({ errors: error })\n        if (error[\"isValidPassword\"]) {\n            this.setState({isResetSuccessful:true})\n            const obj = {\n                password: this.state.fields[\"password\"],\n                email:this.state.email\n            }\n            request({\n                url: \"http://localhost:4000/resetpassword/updatepassword\",\n                method: \"POST\",\n                json: true,\n                body: obj\n            },(error, response) => {\n                let errors ={}\n                console.log(response);\n                \n                if(response.statusCode===400)\n                      {\n                          console.log(response);\n                        errors[\"email\"]=`${response.body.message.error}`;\n                        console.log(response.body.message.error);\n                        \n                        this.setState({errors})\n                      }else if(response.body.message.success){\n                          console.log(\"Password Updated\"); \n                      }\n                         \n                      \n                })\n        }\n    }\n    render() {\n        return (\n            <div>\n                \n                \n               \n                {this.state.isTokenVerified &&\n                    <form className=\"demo-form\"\n                        noValidate\n                        onSubmit={(e) => this.handleSubmit(e)}>\n                        <div className='form-header'>\n                            <h2 className='form-heading'>Reset Password</h2>\n                            <div className=\"form-descp\">\n                                <p className=''>Enter Your New Password</p>\n                            </div>\n                        </div>\n                        <div className=\"input-fields\">\n                            <Input \n                                label={'Password'}\n                                name={'password'}\n                                type={'password'}\n                                value={this.state.password}\n                                onChange={(e) => this.handleUserInput(e)}\n                                toggleCondition={true}\n                            />\n                            <Input \n                                label={'Confirm Password'}\n                                name={'confirmPassword'}\n                                type={'password'}\n                                value={this.state.password}\n                                onChange={(e) => this.handleUserInput(e)}\n                                toggleCondition={true}\n\n                            />\n                        </div>\n                        <div className=\"fade-in\">\n                            <div className=\"error\">\n                            {this.state.errors.password &&\n                             <Error errorMessage={this.state.errors.password} className={\"warning\"}/>}\n                            </div>\n                                <div className='buttonwrapper'>\n                                    <Button buttonName={\"RESET\"} className={\"primary\"} />\n                                </div>\n                        </div>\n                    </form>}\n                {this.state.isResetSuccessful &&\n                    <div className='demo-form'>\n                        <div className='successful '>\n                            <p>Reset Successful! Go to login page and Enjoy</p>\n                        </div>\n                        <Link to='/'>\n                            <span className='d-flex justify-content-end'>Go To Your Email<FaAngleDoubleRight /></span>\n                        </Link>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}