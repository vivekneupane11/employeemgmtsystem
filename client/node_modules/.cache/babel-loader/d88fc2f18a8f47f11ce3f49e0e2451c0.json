{"ast":null,"code":"var _jsxFileName = \"/home/khaggs/Documents/GITLAB Project/employee_mgmt_system/client/src/container/LoginPage/Form.jsx\";\nimport React from 'react';\nimport '../../assets/styles/form.scss';\nimport Button from '../../components/Button/index.jsx';\nimport Input from '../../components/Input/index.jsx';\nimport Error from '../../components/Error/index.jsx';\nimport { FaBeer } from 'react-icons/fa';\nimport { Link, Redirect } from 'react-router-dom';\nimport ValidateField from 'utils/helpers/ValidateField';\nimport request from 'request';\nimport '../../components/RadioButton/index.jsx';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        email: '',\n        password: ''\n      },\n      errors: {\n        isValidForm: false\n      },\n      ToggleOff: true,\n      redirect: false\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    if (this.state.ToggleOff) {\n      this.setState({\n        ToggleOff: false\n      });\n    } else {\n      this.setState({\n        ToggleOff: true\n      });\n    }\n  }\n\n  handleUserInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    let fields = this.state.fields;\n    fields[name] = value;\n    this.setState({\n      fields\n    });\n    this.setState({\n      [name]: value\n    });\n    let newState = JSON.parse(JSON.stringify(this.state.errors)); //make changes to ingredients\n\n    newState.email = undefined;\n    newState.password = undefined;\n    this.setState({\n      errors: newState\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log('hello');\n    const error = ValidateField(this.state.fields);\n    this.setState({\n      errors: error\n    });\n    console.log(error);\n\n    if (error['isValidForm']) {\n      request({\n        url: \"http://localhost:4000/login\",\n        method: \"POST\",\n        json: true,\n        body: this.state.fields\n      }, (error, response) => {\n        let errors = {};\n\n        if (response.statusCode === 400) {\n          console.log(response);\n          errors[\"email\"] = \"\".concat(response.body.message.error);\n          this.setState({\n            errors\n          });\n        } else if (response.body.message.success) {\n          console.log('logged in');\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"demo-form\",\n      noValidate: true,\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"SIGN IN PAGE\"), React.createElement(\"div\", {\n      className: \"form-descp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Enter you email and password to continue\"), React.createElement(\"p\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"To reset password click on forgot password field\"))), React.createElement(\"div\", {\n      className: \"input-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: 'Email',\n      name: 'email',\n      type: 'text',\n      icon: false,\n      value: this.state.email,\n      onChange: e => this.handleUserInput(e),\n      className: 'normal',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: 'Password',\n      name: 'password',\n      type: 'password',\n      icon: true,\n      iconName: FaBeer,\n      toggleCondition: this.state.ToggleOff,\n      onClick: this.handleToggle,\n      value: this.state.password,\n      onChange: e => this.handleUserInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"remember_error_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"remember_forgot_panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Remember Me\")), React.createElement(Link, {\n      to: \"forgotpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Forgot Password\")), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, (this.state.errors.email || this.state.errors.password) && React.createElement(Error, {\n      errorMessage: \"\".concat(this.state.errors.email, \" \").concat(this.state.errors.password),\n      className: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"fade-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonName: \"LOGIN\",\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/khaggs/Documents/GITLAB Project/employee_mgmt_system/client/src/container/LoginPage/Form.jsx"],"names":["React","Button","Input","Error","FaBeer","Link","Redirect","ValidateField","request","Form","Component","constructor","props","state","fields","email","password","errors","isValidForm","ToggleOff","redirect","handleToggle","bind","setState","handleUserInput","e","name","target","value","newState","JSON","parse","stringify","undefined","handleSubmit","preventDefault","console","log","error","url","method","json","body","response","statusCode","message","success","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../../assets/styles/form.scss'\nimport Button from '../../components/Button/index.jsx'\nimport Input from '../../components/Input/index.jsx'\nimport Error from '../../components/Error/index.jsx'\nimport { FaBeer } from 'react-icons/fa';\nimport { Link,Redirect } from 'react-router-dom'\nimport ValidateField from 'utils/helpers/ValidateField';\nimport request from 'request';\nimport '../../components/RadioButton/index.jsx'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {\n                email:'',\n                password:''\n            },\n            errors: {\n                isValidForm:false\n            },\n            ToggleOff: true,\n            redirect: false\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n    }\n    handleToggle() {\n        if (this.state.ToggleOff) {\n            this.setState({ ToggleOff: false });\n        }\n        else {\n            this.setState({ ToggleOff: true })\n        }\n\n    }\n    handleUserInput(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        let fields = this.state.fields;\n        fields[name] = value;\n        this.setState({ fields })\n        this.setState({ [name]: value })\n        let newState = JSON.parse(JSON.stringify(this.state.errors))\n        //make changes to ingredients\n        newState.email = undefined\n        newState.password = undefined\n        this.setState({\n            errors: newState\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        console.log('hello');\n        \n        const error = ValidateField(this.state.fields)\n        this.setState({ errors: error })\n        console.log(error);\n\n        if(error['isValidForm']){\n            request({\n                url: \"http://localhost:4000/login\",\n                method: \"POST\",\n                json: true,\n                body:this.state.fields\n            }, (error, response) => {\n            let errors ={}\n            if(response.statusCode===400)\n                  {\n                      console.log(response);\n                      \n                    errors[\"email\"]=`${response.body.message.error}`;\n                    this.setState({errors})\n                  }else if(response.body.message.success){\n                    console.log('logged in');\n                    \n                      \n                      \n                       \n                  }  \n            })\n        }\n  \n    } \n  \n    render() {\n        return (\n               <div>\n                    \n                    <div className=\"formbox\">\n                <form className=\"demo-form\"\n                    noValidate\n                    onSubmit={(e) => this.handleSubmit(e)}>\n                    <div className='form-header'>\n                        <h2 className='form-heading'>SIGN IN PAGE</h2>\n                        <div className=\"form-descp\">\n                            <p className=''>Enter you email and password to continue</p>\n                            <p className=''>To reset password click on forgot password field</p>\n                        </div>\n                    </div>\n                    <div className=\"input-fields\">\n                        <Input\n                            label={'Email'}\n                            name={'email'}\n                            type={'text'}\n                            icon={false}\n                            value={this.state.email}\n                            onChange={(e) => this.handleUserInput(e)}\n                            className={'normal'} />\n                        <Input \n                            label={'Password'}\n                            name={'password'}\n                            type={'password'}\n                            icon={true}\n                            iconName={FaBeer}\n                            toggleCondition={this.state.ToggleOff}\n                            onClick={this.handleToggle}\n                            value={this.state.password}\n                            onChange={(e) => this.handleUserInput(e)}\n                        />\n                        <div className='remember_error_container'>\n                           <div  className='remember_forgot_panel'>\n                           <div>\n                                <input type='checkbox' />\n                                <span>Remember Me</span>\n                            </div>\n                            <Link to='forgotpassword'>\n                                Forgot Password\n                            </Link>\n                           </div>\n                            <div className=\"error\">\n                          {(this.state.errors.email || this.state.errors.password)  &&\n                          <Error errorMessage={`${this.state.errors.email} ${this.state.errors.password}`} className={\"warning\"} />\n                        }\n                      </div>\n                        </div>\n                        </div>\n                    <div className=\"fade-in\">\n                        <div className='buttonwrapper'>\n                            <Button buttonName={\"LOGIN\"} className={\"primary\"} />\n                        </div>\n                    </div>\n                </form>\n            </div>\n         \n               </div>\n        )\n    }\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}