{"ast":null,"code":"var _jsxFileName = \"/home/khaggs/Documents/GITLAB Project/employee_mgmt_system/client/src/container/Forgot Passwrod/index.jsx\";\nimport React from 'react';\nimport Button from '../../components/Button/index.jsx';\nimport Input from '../../components/Input/index.jsx';\nimport { Link } from 'react-router-dom';\nimport '../../assets/styles/forgotpassword.scss';\nimport Error from '../../components/Error/index.jsx';\nimport { FaAngleDoubleLeft } from 'react-icons/fa';\nimport '../../components/Error/index.jsx';\nimport ValidateField from '../../utils/helpers/ValidateField';\nimport request from 'request';\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: true,\n      fields: {\n        email: ''\n      },\n      errors: {\n        isValidEmail: false\n      },\n      isSentSuccess: false\n    };\n  }\n\n  handleChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    let fields = this.state.fields;\n    fields[name] = value;\n    let newState = JSON.parse(JSON.stringify(this.state.errors));\n    newState.email = undefined;\n    this.setState({\n      errors: newState\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const error = ValidateField(this.state.fields);\n    console.log(error);\n    this.setState({\n      errors: error\n    });\n\n    if (error[\"isValidEmail\"]) {\n      const obj = {\n        email: this.state.fields[\"email\"]\n      };\n      request({\n        url: \"http://localhost:4000/resetpassword/sendlinktoemail\",\n        method: \"POST\",\n        json: true,\n        body: obj\n      }, (error, response) => {\n        let errors = {};\n        console.log(response);\n\n        if (response.statusCode === 400) {\n          console.log(response);\n          errors[\"email\"] = \"\".concat(response.body.message.error);\n          this.setState({\n            errors\n          });\n        } else if (response.body.message.success) {\n          this.setState({\n            isSentSuccess: true\n          });\n          console.log(\"Email Sent successfully\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, !this.state.isSentSuccess && React.createElement(\"form\", {\n      className: \"forgotpassword-form\",\n      noValidate: true,\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(\"p\", {\n      className: \"form-descp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Enter your Email Address to reset the password\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FaAngleDoubleLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \"Back\"))), React.createElement(Input, {\n      id: 'email_id',\n      label: 'Email',\n      name: 'email',\n      type: 'text',\n      icon: false,\n      value: \"this.state.email\",\n      validity: \"this.state.validEmail\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forgotpassword-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.errors.email && React.createElement(Error, {\n      errorMessage: this.state.errors.email,\n      className: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttonwrapper-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonName: 'SEND',\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))), this.state.isSentSuccess && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"successful\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Thanks! We've just sent you an email with a link to set a new password. Go to your inbox, and click on the link in the email to continue.\")), React.createElement(\"a\", {\n      href: \"https://gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Go To Your Email\")));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/khaggs/Documents/GITLAB Project/employee_mgmt_system/client/src/container/Forgot Passwrod/index.jsx"],"names":["React","Button","Input","Link","Error","FaAngleDoubleLeft","ValidateField","request","ForgotPassword","Component","constructor","props","state","flag","fields","email","errors","isValidEmail","isSentSuccess","handleChange","e","name","target","value","newState","JSON","parse","stringify","undefined","setState","handleSubmit","preventDefault","error","console","log","obj","url","method","json","body","response","statusCode","message","success","render"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport Button from '../../components/Button/index.jsx'\nimport Input from '../../components/Input/index.jsx'\nimport { Link } from 'react-router-dom'\nimport '../../assets/styles/forgotpassword.scss'\nimport Error from '../../components/Error/index.jsx'\nimport { FaAngleDoubleLeft, } from 'react-icons/fa';\nimport '../../components/Error/index.jsx'\nimport ValidateField from '../../utils/helpers/ValidateField'\nimport request from 'request';\nclass ForgotPassword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            flag: true,\n            fields: {\n                email:''\n            },\n            errors: {\n                isValidEmail:false\n            },\n            isSentSuccess:false\n        }\n    }\n    handleChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n        let fields = this.state.fields;\n        fields[name] = value;\n        let newState = JSON.parse(JSON.stringify(this.state.errors))\n        newState.email = undefined\n        this.setState({\n            errors: newState\n        })\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const error = ValidateField(this.state.fields)\n        console.log(error)\n        this.setState({ errors: error })\n        if (error[\"isValidEmail\"]) {\n            const obj = {\n                email: this.state.fields[\"email\"]\n            }\n            request({\n                url: \"http://localhost:4000/resetpassword/sendlinktoemail\",\n                method: \"POST\",\n                json: true,\n                body: obj\n            }, (error, response) => {\n                let errors ={}\n                console.log(response);\n\n                if(response.statusCode===400)\n                      {\n                          console.log(response);\n                          \n                        errors[\"email\"]=`${response.body.message.error}`;\n                        this.setState({errors})\n                      }else if(response.body.message.success){\n                          this.setState({isSentSuccess:true})\n                          console.log(\"Email Sent successfully\"); \n                      }  \n                })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {!this.state.isSentSuccess &&\n                    <form className=\"forgotpassword-form\"\n                        noValidate\n                        onSubmit={(e) => this.handleSubmit(e)}>\n                        <div className='form-header'>\n                            <h2 className='form-heading'>Reset Password</h2>\n                            <p className='form-descp'>Enter your Email Address to reset the password</p>\n                            <Link to='/'>\n                                <span className='links'><FaAngleDoubleLeft />Back</span>\n                            </Link>\n                        </div>\n                        <Input id={'email_id'}\n                            label={'Email'}\n                            name={'email'}\n                            type={'text'}\n                            icon={false}\n                            value={\"this.state.email\"}\n                            validity={\"this.state.validEmail\"}\n                            onChange={(e) => this.handleChange(e)} />\n                        <div className='forgotpassword-footer'>\n                        <div>\n                        {this.state.errors.email &&\n                            <Error errorMessage={this.state.errors.email} className={\"warning\"}/>}\n                        </div>\n                            <div className='buttonwrapper-next'>\n                                    <Button buttonName={'SEND'} className={\"primary\"} />\n                            </div>\n                        </div>\n                    </form>}\n                {this.state.isSentSuccess &&\n                    <div>\n                        <div className='successful'>\n                            <p>Thanks! We've just sent you an email with a link to set a new password. Go to your inbox, and click on the link in the email to continue.</p>\n                        </div>\n                       <a href=\"https://gmail.com\">Go To Your Email</a>\n                    </div>\n                }\n            </div>)\n    }\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}